<html><body>
<h2>My Resume 1</h2>
<p><b>Synopsis</b></p>
<ul>
<li>Skilled in both software development and maintenance on Windows, Unix and Linux platforms.</li>
<li>Effective team member who is comfortable in leading or collaborating.</li>
<li>M.Sc in Computer Science with research and teaching experience.</li>
</ul>
<p><b>Expertise</b></p>
<ul>
<li>Electronic Design Automation</li>
<ul>
<li>Background in Electrical Engineering with experience in electronic circuit analysis, design and troubleshooting.</li>
<li>Familiar with schematic and language design methodology ( VHDL, Verilog, SystemC ) and simulators.</li>
<li>Library Management area : designed, implemented and performance tuned EDA oriented API to bridge legacy products to proprietary Oracle tool.</li>
<li>IC Verification area : maintained and supported 7 tools ( 7M lines of code ) for parasitic extraction, design rule checking, electrical rule checking, layout verification and netlist input/output.</li>
<li>Experienced in advanced data structures and algorithms such as graph algorithms, parallel algorithms and simulated annealing.</li>
</ul>
<li>Software Development and Maintenance</li>
<ul>
<li>Participated in all aspects of software development cycle - requirements, design, implementation, maintenance, testing and customer support.</li>
<li>Practical adoption of Extreme methodology where possible, such as continuous integration, ongoing testing, frequent small but complete small releases often and code refactoring.</li>
<li>Enhanced object-oriented solutions with pattern-based designs such as singletons, smart pointers and reference counting.</li>
<li>Leveraged use of modern template based C++ libraries including Loki, Boost and Xparam for quality and timely solutions.</li>
<li>Depth of experience in multi platforms such as Unix, Linux and WinNT :
       Simultaneous development (test, implement, test) on Unix and WinNT ( no separate porting required ).
       Use of STLport ( www.stlport.org ) to provide STL platform portability.
       Designated as the team resource on WinNT and VC5/6 development issues.
       Platform agnostic as a GNU and Emacs Development Environment power user on both Unix and WinNT.
    </li>
<li>Completed basic Java and C#, advanced Java and XML training.</li>
</ul>
<li>Process Automation</li>
<ul>
<li>Designed and developed advanced automated test infrastructures for functional, configuration and unit-level testing. Test systems can be built from scratch or based on commercial products such as Microsoft Visual Test.</li>
<li>Extended and integrated test process with build and release processes for faster turnaround.</li>
<li>Extended processes for metrics gathering for trending.</li>
<li>Developed internal software tools such as flexible trace and debug package and a GUI automated test system.</li>
</ul>
</ul>
<p><b>History</b></p>
<ul>
<li>Synopsys
               ( Hillsboro, OR : 
                 Dec05 - 
                 Feb08
               )
               <i>senior software engineer</i>
</li>
<ul>
<li>Appraised level of Operational dysfunctionality and start triage work, starting with Build process</li>
<ul></ul>
<li>Break long held but unproductive practices in legacy Production system</li>
<ul></ul>
<li>Incorporated software development metrics ( Purify, PureCoverage and Coverity ) into Production system.</li>
<ul></ul>
<li>Design and implementation of a comprehensive, flexible, scalable production system that encompass Build, Test, Install, Reporting and Analysis, with the following capabilities :
         </li>
<ul>
<li>graphs to control and visualize dependencies </li>
<li>single point of configuration</li>
<li>single point of control for Unix ( Solaris Grid Engine ) and Windows ( rsh ) for all processes</li>
<li>build/test/metrics subgraphs to combine for different processes such as Build only, Build and Test, Build,Test and Metrics</li>
<li>facilities for debugging, restart, bypass and halt arbitary points in the graph</li>
<li>nodes of graph can be run individually or as part of a graph</li>
</ul>
<li>Specify, purchase and fill-in administation of fringe Corporate platform ( Windows 32 and 64 bit)</li>
<ul></ul>
<li>Promote use of Twiki for communication, documentation and access of Operational work and past practices. This anticipated the introduction of Corporate Document Retention policy by a year.</li>
<ul></ul>
<li>Prototyped MySQL database for comprehensive testing and trend analysis.</li>
<ul></ul>
</ul>
<li>Independent projects and training
               ( Tualatin, OR : 
                 Jun05 - 
                 Dec05
               )
               <i>software consultant</i>
</li>
<ul>
<li>Took 3 courses at Portland Community College, covering Database Development, Web Scripting and C#.</li>
<ul></ul>
<li>Implemented CSS-based 3 pane layout to replace table-based HTML pages</li>
<ul></ul>
<li>Investigated FxCop and NUnit for C# development process.</li>
<ul></ul>
<li>Extended Database class to learn about ASP.NET and XML Web services.</li>
<ul></ul>
</ul>
<li>Mentor Graphics
               ( Wilsonville, OR : 
                 Dec03 - 
                 May05
               )
               <i>senior software engineer</i>
</li>
<ul>
<li>Investigated, designed, implemented coverage gathering process based on PureCoverage for Windows.</li>
<ul></ul>
<li>Worked with Imagix to produce call tree colorings to visualize coverage gaps and dependencies.</li>
<ul></ul>
<li>Establish baselines utilizing 8000 testcases on 1 million lines of code. Each baseline took 1.5 weeks of run time.</li>
<ul></ul>
<li>Used object-oriented Perl to fully implement a minimal specification of a new test launcher.</li>
<ul></ul>
<li>Increased testing throughput from one build a day to three concurrent builds a day.</li>
<ul></ul>
<li>Smart grouping of testcases into a dependency hierarchy of blocks, allowing early failure detection and improving confidence of downstream groups.</li>
<ul></ul>
<li>Allow Lego-like mix and match of builds and test groups for flexible scheduling.</li>
<ul></ul>
<li>Increased reliabilty and usability by strobed runs and pause/continue/abort control.</li>
<ul></ul>
</ul>
<li>Intel
               ( Hillsboro, OR : 
                 Jul03 - 
                 Dec03
               )
               <i>software consultant</i>
</li>
<ul>
<li>Investigated and wrote product requirements document for new product evaluation/update/install CD for Intel Software Products division.</li>
<ul></ul>
<li>Designed and implemented a Windows/Linux "smart" C++ utility to gather licence and install information and recommend subscription based options for the user.</li>
<ul></ul>
<li>Licensing is based on the FlexLM API, while install detection is platform specific, RPM on Linux and Win32 API on Windows.</li>
<ul></ul>
<li>Leveraged open sourced libraries Boost, Loki and XParam to meet tight delivery datelines.</li>
<ul></ul>
</ul>
<li>Independent projects
               ( Tualatin, OR : 
                 Oct02 - 
                 Jul03
               )
               <i>software consultant</i>
</li>
<ul>
<li>Designed and implemented an extensible set of software utilities based on Boost Graph Library and AT&amp;T's Graph Visualization package to allow the study of EDA algorithms. This included support for D calculus, flexible debug and trace facilities and command line handling.</li>
<ul></ul>
<li>Implemented a basic automatic test pattern generation ( ATPG ) algorithm.</li>
<ul></ul>
<li>Learnt basic VHDL and SystemC hardware and system modeling languages, using Blue Pacific HDL tools.</li>
<ul></ul>
<li>Studied C# from "Inside C#" by Tom Archer and the .NET SDK.</li>
<ul></ul>
<li>Studied Managed C++ and how to use STL with managed garbage-collected types.</li>
<ul></ul>
<li>Completed study of Exceptional C++, by Herb Sutter.</li>
<ul></ul>
</ul>
<li>Mentor Graphics
               ( Wilsonville, OR : 
                 Mar00 - 
                 Sep02
               )
               <i>senior software development engineer</i>
</li>
<ul>
<li>Primary engineer responsible for the extension of Mentor's proprietary C based Procedural Interface for parts library access. Careful design allowed the implementation to be in C++, with a bridge class interfacing the legacy C code. This provided an EDA object oriented layer on top of Oracle databases for managing electronic design, materials and enterprise data.</li>
<ul></ul>
<li>Collaborated closely with product development team members located in Nuremberg, Germany.</li>
<ul></ul>
<li>Implemented Java JNI interface to the product.</li>
<ul></ul>
<li>Implemented new C++ Interface to provide better performance and usage compatibility. The implementation uses VC6 on Win2K/WinNT and gcc on Solaris and HPUX. Utilized STL ex&gt;tensively and advanced modular C++ design techniques to streamline dependencies and simplify development. Implemented 7 man-weeks project in 4 weeks. </li>
<ul></ul>
<li>Utilized gprof and Quantify for performance tuning, improving query/reply time by 10x.</li>
<ul></ul>
<li>Improved code quality with memory checking tools ( Purify ).</li>
<ul></ul>
</ul>
<li>Genedax
               ( Portland, OR : 
                 Dec97 - 
                 Mar00
               )
               <i>software development engineer</i>
</li>
<ul>
<li>Developed and implemented an MFC compatible C++ persistence model for a VHDL COM-based product.</li>
<ul></ul>
<li>Designed and implemented a Windows NT integrated Build/Test/Release/Install system linking Microsoft Visual SourceSafe for version control, Visual Studio for compile and builds, and InstallShield for installation and CD creation. The framework itself was designed and implemented in ActiveState Perl.</li>
<ul></ul>
<li>Integrated and tested VC++ VHDL 87 and 93 validation modules, developed by an off-site contractor.</li>
<ul></ul>
</ul>
<li>Mentor Graphics
               ( Wilsonville, OR : 
                 Feb94 - 
                 Nov97
               )
               <i>software development engineer</i>
</li>
<ul>
<li>Responsible for the software maintenance of the CheckMate IC verification product family. This is a C-based set of 7 tools with a total of 7 million lines of code. Engineering work involved extensive use of gcc and gdb on Solaris, HP-UX and IBM AIX. Performed large scale refactoring to legacy code to increase maintainability and robustness.</li>
<ul></ul>
<li>Close collaboration with Dallas, Texas Instruments team on bug fixing, code sharing and releases.</li>
<ul></ul>
<li>Designed and implemented a Perl-based Unix build and test environment. This includes using Perl modules for load monitoring, task sychronization, metric collection and dbm database access.</li>
<ul></ul>
<li>Directed and trained entry-level engineer.</li>
<ul></ul>
<li>Re-engineered the release process by integrating Build, Test and Release flow, slashing 40% off the final release schedule.</li>
<ul></ul>
<li>Provided engineering support to Customer Support and Field. Team received Achievement Award in 1995 for outstanding effort.</li>
<ul></ul>
</ul>
<li>Mentor Graphics
               ( Wilsonville, OR : 
                 Apr90 - 
                 Jan94
               )
               <i>software quality assurance engineer</i>
</li>
<ul>
<li>Responsible for quality assurance engineering functions on two key framework products on multiple platforms. This includes installation, configuration and interoperability testing.</li>
<ul></ul>
<li>Architected, developed and maintained a flexible and extensible automated test environment supporting interactive and batch operations, flexible selection of testcases and parallel execution. Clean architecture allowed plugging any source control management system.</li>
<ul></ul>
</ul>
</ul>
<p><b>Technical</b></p>
<table border="0">
<tr>
<td bgcolor="#9acd32">Operating Systems</td>
<td>Windows NT 4 2K XP Vista, UNIX - HPUX, Solaris, SunOS, AIX,  Linux, Mach</td>
</tr>
<tr>
<td bgcolor="#9acd32">Languages</td>
<td>Visual C++ 5.0/6.0/7.1, Gnu C/C++, Comeau C++, Java, C#, Perl 5, Tcl, Awk, Sh, Csh, Lisp</td>
</tr>
<tr>
<td bgcolor="#9acd32">Web</td>
<td>Javascript, CSS, XML, Twiki, Ruby on Rails</td>
</tr>
<tr>
<td bgcolor="#9acd32">C++ Libraries</td>
<td>Boost, xParam, wxWindows, COM, ATL, MFC</td>
</tr>
<tr>
<td bgcolor="#9acd32">Version Control</td>
<td>Perforce, Subversion, CVS, RCS, Visual SourceSafe</td>
</tr>
<tr>
<td bgcolor="#9acd32">Operations</td>
<td>VMWare, Sun Grid Engine</td>
</tr>
</table>
<p><b>Publications</b></p>
<ul>
<li>
<i>Kwee Heong Tan</i>
                "Exploring EDA algorithms with the Boost Graph Library" 
                <i>C/C++ User's Journal</i>
                ( Jul2003
                )
            </li>
<li>
<i>Richard J Enbody, Gary Lynn and Kwee Heong Tan</i>
                "Routing the 3-D Chip" 
                <i>ACM/IEE Design Automation Conference</i>
                ( 1991
                )
            </li>
</ul>
</body></html>
